#!/bin/bash
# Copyright Matus Chochlik.
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt
#
K=300
S=100
J=$(grep -c -e 'processor\s\+:\s\+[0-9]\+' < /proc/cpuinfo)
T="$(basename ${0})"
F="${T}"
TIMEFORMAT=%3R
what=()
order=(shuf)
#
while getopts "k:s:j:f:W:SR" arg
do
	case ${arg} in
		k) K=${OPTARG};;
		s) S=${OPTARG};;
		j) J=${OPTARG};;
		f) F=${OPTARG};;
		W) what+=(${OPTARG});;
		S) order=(cat);;
		R) order=(sort -n -r);;
		*) exit 1;;
	esac
done
#
this_dir="$(realpath $(dirname ${0}))"
work_dir="$(mktemp -d)"
function cleanup {
	rm -r "${work_dir}"
}
trap cleanup EXIT
#
cat << EOD > "${work_dir}/Makefile"
CXX ?= g++
CXXFLAGS = -std=c++20 -ftemplate-depth=$(((K + 1) * S)) -fconstexpr-depth=$(((K + 1) * S))

all: times sizes

times: dryrun times.csv

sizes: dryrun sizes.csv

empty:
	touch \$@

.PHONY: all empty times sizes

dryrun: src-$((K * S)).cpp
	\$(CXX) \$(CXXFLAGS) -o \$@ \$<

src-%-time.csv: src-%.time
	echo "\$*;\$(file <\$<)" | tr ',' '.' > \$@

src-%-size.csv: src-%.size
	echo "\$*;\$(file <\$<)" > \$@

src-%.time: src-%.cpp
	(TIMEFORMAT=%3R /bin/bash -c "time \$(CXX) \$(CXXFLAGS) -o /dev/null \$<") 2> \$@

src-%.size: exe-%
	wc --bytes < \$< > \$@
	rm \$<

exe-%: src-%.cpp
	\$(CXX) \$(CXXFLAGS) -o \$@ \$< | wc --bytes > \$@

src-%.cpp: ${this_dir}/mksrc-${T}
	\$< \$* ${S} > src-\$*.cpp

times.csv: \\
EOD
for M in $(seq 1 ${K} | ${order[@]})
do echo "	src-$((M * S))-time.csv \\" >> "${work_dir}/Makefile"
done
cat << EOD >> "${work_dir}/Makefile"
	empty
	sort -n -t \; \$^ > \$@
EOD

cat << EOD >> "${work_dir}/Makefile"
sizes.csv: \\
EOD
for M in $(seq 1 ${K} | ${order[@]})
do echo "	src-$((M * S))-size.csv \\" >> "${work_dir}/Makefile"
done
cat << EOD >> "${work_dir}/Makefile"
	empty
	sort -n -t \; \$^ > \$@
EOD

cd "${work_dir}" && make dryrun && ./dryrun
for W in "${what[@]}"
do
	if [[ "${W}" == "times" ]]
	then
		make -j ${J} times && (
			echo "instantiations;compile-time [s]"
			cat times.csv
		) > "${this_dir}/time-${F}-${K}x${S}.csv"
	elif [[ "${W}" == "sizes" ]]
	then
		make -j ${J} sizes && (
			echo "instantiations;executable-size [B]"
			cat sizes.csv
		) > "${this_dir}/size-${F}-${K}x${S}.csv"
	fi
done

