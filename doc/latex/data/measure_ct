#!/bin/bash
# Copyright Matus Chochlik.
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt
#
K=300
S=100
J=$(grep -c -e 'processor\s\+:\s\+[0-9]\+' < /proc/cpuinfo)
T="$(basename ${0})"
F="${T}"
TIMEFORMAT=%3R
#
while getopts "k:s:j:f:" arg
do
	case ${arg} in
		k) K=${OPTARG};;
		s) S=${OPTARG};;
		j) J=${OPTARG};;
		f) F=${OPTARG};;
		*) exit 1;;
	esac
done
#
this_dir="$(realpath $(dirname ${0}))"
work_dir="$(mktemp -d)"
function cleanup {
	rm -r "${work_dir}"
}
trap cleanup EXIT
#
cat << EOD > "${work_dir}/Makefile"
CXX ?= g++
CXXFLAGS = -std=c++20 -ftemplate-depth=$(((K + 1) * S)) -fconstexpr-depth=$(((K + 1) * S))

all: dryrun measurements.csv

empty:
	touch \$@

dryrun: src-$((K * S)).cpp
	\$(CXX) \$(CXXFLAGS) -o \$@ \$<

src-%.csv: src-%.time
	echo "\$*;\$(file <\$<)" | tr ',' '.' > \$@

src-%.time: src-%.cpp
	(TIMEFORMAT=%3R /bin/bash -c "time \$(CXX) \$(CXXFLAGS) -o /dev/null \$<") 2> \$@

src-%.cpp: ${this_dir}/mksrc-${T}
	\$< \$* > src-\$*.cpp

measurements.csv: \\
EOD
for M in $(seq 1 ${K})
do echo "	src-$((M * S)).csv \\" >> "${work_dir}/Makefile"
done
cat << EOD >> "${work_dir}/Makefile"
	empty
	cat \$^ > \$@
EOD

cd "${work_dir}" && make dryrun && ./dryrun
make -j ${J} && (
	echo "instantiations;compile-time [s]"
	cat measurements.csv
) > "${this_dir}/${F}-${K}x${S}.csv"
